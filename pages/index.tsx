import type { NextPage } from 'next'
import Head from 'next/head'
import Header from '../components/header'
import ItemList from '../components/itemlist'
import { useQuery, useQueries } from '@tanstack/react-query'

const Home: NextPage = () => {
  const fetchTopStories = async (): Promise<number[]> => {
    const res = await fetch(
      'https://hacker-news.firebaseio.com/v0/topstories.json'
    )
    const data = await res.json()
    return data
  }

  const fetchItem = async (itemId: number) => {
    const res = await fetch(
      `https://hacker-news.firebaseio.com/v0/item/${itemId}.json`
    )
    const data = await res.json()
    return data
  }

  const {
    isError: isTopStoriesError,
    isLoading: isLoadingTopStories,
    data: topStoryIds,
    error: topStoriesError,
  } = useQuery(['topStories'], fetchTopStories)

  if (isLoadingTopStories) {
    return <p>Loading...</p>
  }

  if (isTopStoriesError && topStoriesError instanceof Error) {
    return <p>{topStoriesError.message}</p>
  }

  console.log(topStoryIds)

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />
        <div className="container mx-auto">
          <h2 className="text-lg">Latest top story ids</h2>
          <ItemList itemIds={topStoryIds!.slice(0, 10)} />
        </div>
      </main>
    </div>
  )
}

export default Home
